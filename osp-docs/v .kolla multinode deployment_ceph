################### kolla multinode deploy #########3

##########create cinder-volumes#############
pvcreate --metadatasize 2048 /dev/sdb
vgcreate cinder-volumes /dev/sdb

sudo apt update -y && apt upgrade -y 
sudo apt update

###Install dependencies not using a virtual environment###

sudo apt install git python3-dev libffi-dev gcc libssl-dev -y

################### Install dependencies ##############

sudo apt install python3-venv -y

python3 -m venv /opt/osp
source /opt/osp/bin/activate

pip install -U pip

############################ Install Kolla-ansible  ###########################
pip install 'ansible-core>=2.15,<2.15.8'

############################ Install kolla-ansible and its dependencies using pip. ###############

pip install git+https://opendev.org/openstack/kolla-ansible@unmaintained/2023.1

sudo mkdir -p /etc/kolla
sudo chown $USER:$USER /etc/kolla

cp -r /opt/osp/share/kolla-ansible/etc_examples/kolla/* /etc/kolla
cp /opt/osp/share/kolla-ansible/ansible/inventory/* .


############################  Install Ansible Galaxy requirements ############################

kolla-ansible install-deps

#############configuration file /etc/ansible/ansible.cfg
mkdir /etc/ansible
vi  /etc/ansible/ansible.cfg
[defaults]
host_key_checking=False
pipelining=True
forks=100

############# Edit the first section of multinode with connection details of your environment, for example:
vi multinode

[control]
# These hostname must be resolvable from your deployment host
controller

[network]
controller

[compute]
compute

[storage]
storage

#############generate key#########

ssh-keygen 

ansible -i multinode all -m ping

#####################Passwords used in our deployment are stored in /etc/kolla/passwords.yml file############### 

kolla-genpwd

##############globals.yml is the main configuration file for Kolla Ansible. 
############################ need to more research on it 
vi /etc/kolla/globals.yml
---
################Services enabled by default############
#Keystone, Glance, Nova, Placement, Neutron, Cinder, Heat, Horizon. 

kolla_base_distro: "ubuntu"
kolla_install_type: "binary"
enable_haproxy: "yes"
keepalived_virtual_router_id: "51"
enable_chrony: "yes"
enable_etcd: "yes"

kolla_internal_vip_address: "192.168.1.125"  # Internal VIP
network_interface: "enp1s0"

glance_backend_ceph: "yes"
ceph_glance_keyring: "ceph.client.glance.keyring"
ceph_glance_user: "glance"
ceph_glance_pool_name: "images"

nova_compute_virt_type: "qemu"
nova_backend_ceph: "yes"
ceph_nova_keyring: "ceph.client.cinder.keyring"
ceph_nova_user: "cinder"
ceph_nova_pool_name: "vms"
nova_console: "novnc"

neutron_external_interface: "enp2s0"
neutron_plugin_agent: "linuxbridge"
enable_neutron_qos: "yes"
enable_neutron_vpnaas: "yes"
enable_neutron_trunk: "yes"
enable_neutron_metering: "yes"
enable_neutron_port_forwarding: "yes"

enable_cinder: "yes"
enable_cinder_backend_iscsi: "{{ enable_cinder_backend_lvm | bool }}"
enable_cinder_backend_lvm: "yes"
cinder_volume_group: "cinder-volumes"
############################################
cinder_backend_ceph: "yes"
ceph_cinder_keyring: "ceph.client.cinder.keyring"
ceph_cinder_user: "cinder"
ceph_cinder_pool_name: "volumes"
#ceph_cinder_backup_keyring: "ceph.client.cinder-backup.keyring"
#ceph_cinder_backup_user: "cinder-backup"
#ceph_cinder_backup_pool_name: "backups"
############################################
enable_cinder_backup: "yes"
cinder_backup_driver: "nfs"
cinder_backup_share: "192.168.1.121:/cinderbkp"
cinder_backup_mount_options_nfs: "vers=4"

enable_ceilometer: "yes"
enable_gnocchi: "yes"
enable_gnocchi_statsd: "no"
enable_redis: "yes"
gnocchi_incoming_storage: "{{ 'redis' if enable_redis | bool else '' }}"

gnocchi_backend_storage: "ceph"
ceph_gnocchi_keyring: "ceph.client.gnocchi.keyring"
ceph_gnocchi_user: "gnocchi"
ceph_gnocchi_pool_name: "gnocchi"

##################Swift and S3 options ###############
#enable_swift: "yes"
enable_swift_s3api: "yes"
enable_ceph_rgw: true
ceph_rgw_swift_compatibility: "true"
ceph_rgw_swift_account_in_url: "true"
ceph_rgw_hosts:
  - host: ceph1
    ip: 192.168.122.131
    port: 8080
  - host: ceph2
    ip: 192.168.122.132
    port: 8080

########################### sysctl and uwf error  if occer  ########################

ansible-galaxy collection install ansible.posix 

ansible-galaxy collection install community.general

ansible-galaxy collection install ansible.netcommon



#########create directories for ceph keyrings &paste them#######
mkdir -p /etc/kolla/config/cinder/cinder-volume/
mkdir -p /etc/kolla/config/cinder/cinder-backup/
mkdir -p /etc/kolla/config/nova/
mkdir -p /etc/kolla/config/glance/
mkdir -p /etc/kolla/config/gnocchi/

#######paste keyrings inside directories##########
cp ceph.client.cinder.keyring /etc/kolla/config/cinder/cinder-volume/
cp /etc/ceph/ceph.conf /etc/kolla/config/cinder/cinder-volume/
cp ceph.client.cinder.keyring /etc/kolla/config/cinder/cinder-backup/
cp /etc/ceph/ceph.conf /etc/kolla/config/cinder/cinder-backup/
cp ceph.client.cinder-backup.keyring /etc/kolla/config/cinder/cinder-backup/
cp ceph.client.cinder.keyring /etc/kolla/config/nova/
cp /etc/ceph/ceph.conf  /etc/kolla/config/nova/
cp ceph.client.nova.keyring  /etc/kolla/config/nova/
cp /etc/ceph/ceph.conf  /etc/kolla/config/glance/
cp ceph.client.glance.keyring  /etc/kolla/config/glance/

#########bootstrap the nodes#########
kolla-ansible -i multinode bootstrap-servers

############################Do pre-deployment checks for hosts:
sudo rm -f /var/run/libvirt/libvirt.sock                             (run when distroy openstack)
kolla-ansible -i multinode prechecks

####################Finally proceed to actual OpenStack deployment:
kolla-ansible -i multinode deploy

#################Install the OpenStack CLI client
pip install python-openstackclient -c https://releases.openstack.org/constraints/upper/master
kolla-ansible post-deploy






a


















































