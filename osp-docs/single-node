### Kolla All-in-One Deployment Guide
This document provides a step-by-step guide for deploying OpenStack using Kolla-Ansible in an all-in-one configuration on Ubuntu.
---
### Prerequisites##########

* Ubuntu server installed
* Sufficient disk space for Cinder LVM backend
* Network interfaces configured:

  * `enp1s0`: Management network
  * `enp2s0`: External network

---

############# Disk Setup for Cinder####################

1. Initialize the physical volume:
pvcreate --metadatasize 2048 /dev/vdb

2. Create the volume group:
vgcreate cinder-volumes /dev/vdb

### System Update############
Update the system packages:

sudo apt update -y && sudo apt upgrade -y
sudo apt update

### Install Dependencies#############
Install essential development and networking dependencies:

sudo apt install git python3-dev libffi-dev gcc libssl-dev -y


###Install virtual environment dependencies:#######
sudo apt install python3-venv -y

### Create and Activate Virtual Environment
1. Create the virtual environment:

python3 -m venv /opt/osp

2. Activate the environment:

source /opt/osp/bin/activate

3. Upgrade `pip`:

pip install -U pip

### Install Ansible and Kolla-Ansible##########

1. Install Ansible Core:

pip install 'ansible-core>=2.15,<2.16'

2. Install Kolla-Ansible:

pip install git+https://opendev.org/openstack/kolla-ansible@stable/2024.1

### Configuration Setup#############
1. Create the configuration directory:

sudo mkdir -p /etc/kolla
sudo chown $USER:$USER /etc/kolla

2. Copy example configurations:
cp -r /opt/osp/share/kolla-ansible/etc_examples/kolla/* /etc/kolla
cp /opt/osp/share/kolla-ansible/ansible/inventory/all-in-one .

3. Install Ansible Galaxy dependencies:

kolla-ansible install-deps

### Generate Kolla Passwords###############
Generate passwords for the OpenStack services:

kolla-genpwd

### Configure `globals.yml`############

Open `/etc/kolla/globals.yml` and set the following:

kolla_base_distro: "ubuntu"
network_interface: "enp1s0"
neutron_external_interface: "enp2s0"
kolla_internal_vip_address: "192.168.1.124"
enable_cinder: "yes"
enable_cinder_backend_lvm: "yes"
cinder_volume_group: "cinder-volumes"

### Resolve Sysctl and UFW Issues#############
1. Install `ansible.posix` for sysctl management:

ansible-galaxy collection install ansible.posix

2. Install `community.general` for UFW management:

ansible-galaxy collection install community.general

3. Install `ansible.netcommon`:

ansible-galaxy collection install ansible.netcommon

### Address SDK Issues##########
1. Verify Python version:

python3 --version

2. Install development packages:

sudo apt-get install pkg-config libdbus-1-dev cmake
sudo apt-get install libglib2.0-dev pkg-config build-essential

3. Upgrade pip, setuptools, and wheel:

python3 -m pip install --upgrade pip setuptools wheel

4. Install Docker SDK and dependencies:

/opt/osp/bin/pip install "docker<7.0.0,>=3.0.0" "requests<2.32" dbus-python

### Deployment Steps################
1. Bootstrap servers:

kolla-ansible -i ./all-in-one bootstrap-servers

2. Run prechecks:

kolla-ansible -i ./all-in-one prechecks

3. Deploy Kolla services:

kolla-ansible -i ./all-in-one deploy

### Post-Deployment############
1. Install OpenStack client:

pip install python-openstackclient -c https://releases.openstack.org/constraints/upper/master

2. Run post-deploy playbook:

kolla-ansible post-deploy

### Additional Steps##############
If encountering issues with the Docker SDK version, reinstall it using:

sudo pip install docker



